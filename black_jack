import random
from replit import clear
from art import logo

def deal_card ():
  cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
  card = (random.choice (cards))
  return card
  
def calculate_score (cards):
  if sum (cards) == 21 and len (cards) ==2:
      return 0

  if 11 in cards and sum (cards) > 21:
    cards.remove (11)
    cards.append (1)

  return sum(cards)

def compare (user_score, computer_score):
  if user_score == computer_score:
    return "draw :("
  elif computer_score == 0:
    return "You lose, the computer has Blackjack!"
  elif user_score == 0:
    return "You won with BLACKJACK!!"
  elif user_score > 21:
    return "Your score is over 21, you lost!"
  elif computer_score > 21:
    return "The computer went over 21, you win!"
  elif user_score > computer_score:
    return  "You win! Your score was higher :D"
  else:
    return "You lose. Your score was lower :("



#empty starting hands represented by lists
def play_blackjack ():
  
  print (logo)

  user_cards = []
  computer_cards = []

  #deal  starting hand
  for card in range (2):
    user_cards.append(deal_card())
    computer_cards.append(deal_card ())

  is_game_over = False

  while not is_game_over:
    user_score = calculate_score (user_cards)
    computer_score = calculate_score (computer_cards)
  


    print (f" Your cards: {user_cards}, computer cards: {computer_cards[0]}, your score: {user_score}")


    if user_score == 0 or computer_score == 0 or user_score > 21:
      is_game_over = True
    else:
      user_deal =input ("Do you want to get another card?  y or n: ")
      if user_deal == "y":
        user_cards.append(deal_card())

      else:
        is_game_over = True

  while computer_score !=0 and computer_score < 17:
    computer_cards.append(deal_card())
    computer_score = calculate_score (computer_cards)

  print (f"Your final hand was: {user_cards}, with a score of {user_score}.")
  print (f"The computer's final hand is: {computer_cards} with a score of {computer_score}.")
  print (compare (user_score, computer_score))

while input ("do you want to play a game of Blackhack? y or n: ") == "y":
  clear()
  play_blackjack()
